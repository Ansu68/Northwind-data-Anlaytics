-- 1.	What are the key factors influencing customer retention or loyalty based on the dataset?
SELECT
  DATE_FORMAT(OrderDate, '%Y-%m') AS months,
  COUNT(DISTINCT CustomerID) AS customers,
  COUNT(DISTINCT CASE WHEN OrderDate BETWEEN DATE_SUB(OrderDate, INTERVAL 1 MONTH) AND 
  OrderDate THEN CustomerID END) AS retained_customers,
  ROUND(COUNT(DISTINCT CASE WHEN OrderDate BETWEEN 
  DATE_SUB(OrderDate, INTERVAL 1 MONTH) AND OrderDate THEN CustomerID END) / COUNT(DISTINCT CustomerID) * 100, 2)
  AS retention_rate
FROM
  orders
GROUP BY
  months
ORDER BY
  months;
  -- 2.	How do customer preferences vary based on their location or demographics? Can we explore this through interactive visualizations?
SELECT c.Country, p.ProductName, COUNT(*) as TotalOrders
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN `order details` od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY c.Country, p.ProductName;
-- Are there any interesting patterns or clusters in customer behavior that can be visualized to identify potential market segments?
-- Categorize customers into spending tiers and count the number of customers in each tier
WITH CustomerSpending AS (
    SELECT
        c.CustomerID,
        c.CompanyName,
        SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSpending
    FROM
        customers c
    JOIN
        Orders o ON c.CustomerID = o.CustomerID
        JOIN
        `order details` od ON o.OrderID = od.OrderID
    GROUP BY
        c.CustomerID, c.CompanyName
)
SELECT
    CustomerID,
    CompanyName,
    TotalSpending,
    CASE
        WHEN TotalSpending >= 20000 THEN 'High Spender'
        WHEN TotalSpending >= 10000 THEN 'Medium Spender'
        ELSE 'Low Spender'
    END AS SpendingSegment
FROM
    CustomerSpending
ORDER BY
    TotalSpending DESC;
   -- 4.	Are there any specific product categories or SKUs that contribute significantly to order revenue? Can we identify them through visualizations?
SELECT cat.CategoryName, round(SUM(od.UnitPrice * od.Quantity),2) as TotalRevenue
FROM `order details` od
JOIN Products p ON od.ProductID = p.ProductID
JOIN Categories cat ON p.CategoryID = cat.CategoryID
GROUP BY cat.CategoryName;
-- 5.	Are there any correlations between order size and customer demographics or product categories
-- Calculate average order size per customer and product category
SELECT
    c.CustomerID,
    c.CompanyName,
    AVG(od.Quantity) AS AvgOrderSize,
    cat.CategoryName AS ProductCategory
FROM
    customers c
JOIN
    Orders o ON c.CustomerID = o.CustomerID
JOIN
    `order details` od ON o.OrderID = od.OrderID
JOIN
    Products p ON od.ProductID = p.ProductID
JOIN
    Categories cat ON p.CategoryID = cat.CategoryID
GROUP BY
    c.CustomerID, c.CompanyName, cat.CategoryName;

-- 6.How does order frequency vary across different customer segments? Can we visualize this using bar charts or treemaps?
WITH CustomerOrderFrequency AS (
    SELECT
        c.CustomerID,
        c.CompanyName,
        COUNT(o.OrderID) AS OrderCount
    FROM
        Customers c
    LEFT JOIN
        Orders o ON c.CustomerID = o.CustomerID
    GROUP BY
        c.CustomerID, c.CompanyName
)
SELECT
    CustomerID,
    CompanyName,
    OrderCount,
    CASE
        WHEN OrderCount >= 10 THEN 'High Order Frequency'
        WHEN OrderCount >= 5 THEN 'Medium Order Frequency'
        ELSE 'Low Order Frequency'
    END AS OrderFrequencySegment
FROM
    CustomerOrderFrequency;
-- 7.	Are there any correlations between employee satisfaction levels and key performance indicators? Can we explore this visually through scatter plots or line charts?
SELECT 
  e.EmployeeID,e.Title,
  Round(SUM(o.Sales),2) AS TotalSales
FROM
  employees e
JOIN
  (SELECT
    o.OrderID,
    o.EmployeeID,
    SUM(od.UnitPrice * od.Quantity) AS sales
  FROM orders o
  JOIN   `order details` od ON
    o.OrderID = od.OrderID
  GROUP BY
    o.OrderID,
    o.EmployeeID) o
ON
  e.EmployeeID = o.EmployeeID -- corrected join condition
GROUP BY
  1,2
  -- 8 How does employee turnover vary across different departments or job roles? Can we visualize this using bar charts or heatmaps?
-- Calculate total sales generated by each employee
SELECT
    e.EmployeeID,
    e.LastName,
    e.FirstName,
    e.Department,
    SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales
FROM
    employees e
JOIN
    orders o ON e.EmployeeID = o.EmployeeID
JOIN
    `order details` od ON o.OrderID = od.OrderID
GROUP BY
    e.EmployeeID, e.LastName, e.FirstName, e.Department;
-- 10 Are there any correlations between product attributes (e.g., size, color, features) and sales performance? 
-- Calculate average sales, average quantity, and total sales for different UnitPrice ranges and ProductNames
SELECT
    ProductName,
    ProductUnitPriceRange,
    AVG(AverageEffectivePrice) AS AvgEffectivePrice,
    AVG(AverageQuantity) AS AvgQuantity,
    SUM(AverageEffectivePrice * AverageQuantity) AS TotalSales
FROM (
    SELECT
        p.ProductID,
        p.ProductName,
        p.UnitPrice AS ProductUnitPrice,
        CASE
            WHEN p.UnitPrice <= 10 THEN '0-10'
            WHEN p.UnitPrice <= 20 THEN '11-20'
            WHEN p.UnitPrice <= 30 THEN '21-30'
            ELSE '31+'
        END AS ProductUnitPriceRange,
        AVG(od.UnitPrice * (1 - od.Discount)) AS AverageEffectivePrice,
        AVG(od.Quantity) AS AverageQuantity
    FROM
        products p
    JOIN
        `order details` od ON p.ProductID = od.ProductID
    GROUP BY
        p.ProductID, p.ProductName, p.UnitPrice
) subquery
GROUP BY
    ProductName, ProductUnitPriceRange
ORDER BY
    ProductName, MIN(ProductUnitPrice);
    -- 11.	How does product demand fluctuate over different seasons or months? Can we visualize this through line charts or area charts?

SELECT p.ProductID, p.ProductName, MONTH(o.OrderDate) AS Month, SUM(od.Quantity) AS TotalQuantity
FROM Orders o
JOIN `order details` od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY p.ProductID, MONTH(o.OrderDate)
ORDER BY p.ProductID, MONTH(o.OrderDate);

-- 12 Can we identify any outliers or anomalies in product performance or sales using visualizations? How can this information be used for product optimization?
SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS TotalSales
FROM Orders o
JOIN  `order details` od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY p.ProductID
ORDER BY TotalSales DESC;

-- Can we identify any patterns or clusters in employee skill sets or qualifications through visualizations? How can this information be used for talent management?
select EmployeeID,concat(FirstName," ",LastName) EmployeeName,Title,Notes
 from employees 
 
 -- 13.	Are there any correlations between supplier attributes (e.g., location, size, industry) and performance metrics (e.g., on-time delivery, product quality)? Can we explore this visually through scatter plots or heatmaps?
 SELECT 
p.ProductID, p.ProductName, s.SupplierID, s.CompanyName,
       o.OrderID, o.OrderDate
FROM Products p
JOIN Suppliers s ON p.SupplierID = s.SupplierID
JOIN Orders o ON o.ShipCountry = s.Country;

-- 14  How does supplier performance vary across different product categories or departments? Can we visualize this using stacked bar charts or grouped column charts?

SELECT 
s.SupplierID, s.CompanyName, p.CategoryID,
	SUM(od.Quantity) AS TotalSales
FROM Suppliers s
JOIN Products p ON s.SupplierID = p.SupplierID
JOIN `order details` od ON p.ProductID = od.ProductID
GROUP BY s.SupplierID, p.CategoryID;

-- 15 Can we identify any trends or patterns in supplier costs or pricing structures through visualizations? How can this information be used for procurement optimization?
SELECT
    YEAR(o.OrderDate) AS OrderYear,
    s.SupplierID,
    s.CompanyName AS SupplierName,
    AVG(p.UnitPrice) AS AverageOrderValue
FROM
    Orders o
JOIN
    Customers c ON o.CustomerID = c.CustomerID
JOIN
    Employees e ON o.EmployeeID = e.EmployeeID
JOIN
    `order details` od ON o.OrderID = od.OrderID
JOIN
    Products p ON od.ProductID = p.ProductID
JOIN
    Suppliers s ON p.SupplierID = s.SupplierID
GROUP BY
    YEAR(o.OrderDate),
    s.SupplierID,
    s.CompanyName
ORDER BY
    OrderYear,
    SupplierID;